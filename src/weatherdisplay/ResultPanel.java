/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package weatherdisplay;

import java.awt.GridBagConstraints;
import java.util.ArrayList;
import javax.swing.JPanel;
import weathermodel.CurrentWeatherData;
import weathermodel.ForecastData;
import weathermodel.WeatherForecastResult;

/**
 *
 * @author yudai
 */
public class ResultPanel extends javax.swing.JPanel {

  /**
   * Creates new form ResultPanel
   */
  public ResultPanel(CurrentWeatherData data, DisplayFrame weatherFrame) {
    initComponents();
    this.data = data;
    this.weatherFrame = weatherFrame;
    countryLabel.setText(data.getCityName() + ", " + data.getCityCountry());
    latLabel.setText("Lat: " + Double.toString(data.getLat()));
    lonLabel.setText("Lon: " + Double.toString(data.getLon()));
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    countryLabel = new javax.swing.JLabel();
    latLabel = new javax.swing.JLabel();
    lonLabel = new javax.swing.JLabel();
    forecastButton = new javax.swing.JButton();

    setBorder(javax.swing.BorderFactory.createEtchedBorder());

    countryLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
    countryLabel.setText("Country, Code");

    latLabel.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
    latLabel.setText("Lat: -000.00");

    lonLabel.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
    lonLabel.setText("Lon: -000.00");

    forecastButton.setText("See Forecast");
    forecastButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        forecastButtonActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(countryLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(latLabel)
              .addComponent(lonLabel))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(forecastButton, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(countryLabel)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addGap(0, 0, Short.MAX_VALUE)
            .addComponent(latLabel)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(lonLabel))
          .addComponent(forecastButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addContainerGap())
    );
  }// </editor-fold>//GEN-END:initComponents

  private void forecastButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forecastButtonActionPerformed
    // TODO bikin button yang nampilin hasil forecast ke panel sebelah
    int cityID = data.getCityId();
    WeatherForecastResult forecastResult = weatherFrame.client.getForecast(cityID);
    ArrayList<ForecastData> forecastList = forecastResult.getForecastList();
    JPanel forecastListPanel  = weatherFrame.getForecastListPanel();
    forecastListPanel.removeAll();
    for (ForecastData forecast: forecastList) {
      ForecastPanel forecastPanel = new ForecastPanel(forecast);
      forecastListPanel.add(forecastPanel);
    }
    forecastListPanel.repaint();
    forecastListPanel.revalidate();
    
  }//GEN-LAST:event_forecastButtonActionPerformed
  
  private CurrentWeatherData data;
  private DisplayFrame weatherFrame;
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JLabel countryLabel;
  private javax.swing.JButton forecastButton;
  private javax.swing.JLabel latLabel;
  private javax.swing.JLabel lonLabel;
  // End of variables declaration//GEN-END:variables
}
